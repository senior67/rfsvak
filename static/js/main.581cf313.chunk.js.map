{"version":3,"sources":["Data.js","screens/Home.js","screens/About.js","PHRASES.js","screens/Phrases.js","context/LibraryContext.js","components/BookList.js","screens/Urban.js","App.js","index.js","img/multimedia-option.svg"],"names":["Excuses","fail","action","date","general","Home","props","useState","phrase","setPhrase","contextOpened","setContextOpened","Math","floor","random","length","item","modalOpen","onClick","src","require","alt","className","opened","onClose","data-mode","changeScreen","separator","mode","header","subheader","background","style","backgroundColor","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","actions","color","closeModal","size","marginTop","level","marginBottom","weight","stretched","About","href","bottom","bridge","send","PHRASES","love","life","friendship","Phrases","LibraryContext","React","createContext","books","id","name","author","addBook","deleteBook","bookId","BooksList","Consumer","context","map","book","key","today","position","right","top","marginLeft","marginRight","Urban","setName","setAuthor","useContext","onSubmit","type","placeholder","value","onChange","e","target","App","setModalOpen","activeView","setActiveView","localData","localStorage","getItem","JSON","parse","setBooks","useEffect","setItem","stringify","Provider","uuidv4","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","old","filter","ReactDOM","render","document","getElementById","module","exports"],"mappings":"ohBAAaA,G,OAAU,CACnBC,KAAM,CACF,4UACA,6cACA,ofACA,4lBACA,qhBACA,kcACA,+FACA,4NACA,+LACA,4WACA,4KACA,qGACA,uGACA,0HACA,8HACA,gJACA,6HACA,+FACA,0IACA,+FACA,4GACA,uJACA,6HACA,4JACA,uSACA,2GACA,+MACA,4GACA,sGACA,gGACA,kHACA,8HACA,2GACA,sJACA,4OAEJC,OAAQ,CACJ,iEACA,gEACA,+DACA,kHACA,+FACA,oDACA,oDACA,0DACA,sEACA,uHACA,kFACA,oIACA,kFACA,wFACA,kFACA,mDACA,uCACA,qIACA,gGACA,6EACA,8CACA,mDACA,iCACA,uEACA,sEACA,qGACA,mDACA,8FACA,kHAEJC,KAAM,CACF,uCACA,uCACA,kFACA,gEACA,sEACA,+FACA,yFACA,0DACA,0DACA,iCACA,kEACA,6EACA,6EACA,2DACA,0IACA,oDACA,qEACA,6EACA,iEACA,kCACA,2GACA,oDACA,mFACA,iCACA,iCACA,wHAEJC,QAAS,CACL,4JACA,sGACA,yJACA,4KACA,wLACA,iJACA,+KACA,uJACA,uJACA,qN,OCtGO,SAASC,EAAKC,GAAQ,IAAD,EACJC,mBAAS,gRADL,mBACzBC,EADyB,KACjBC,EADiB,OAEUF,oBAAS,GAFnB,mBAEzBG,EAFyB,KAEVC,EAFU,KAG5BV,EAAOD,EAAQC,KAAKW,KAAKC,MAAMD,KAAKE,SAAWd,EAAQC,KAAKc,SAC5Db,EAASF,EAAQE,OAAOU,KAAKC,MAAMD,KAAKE,SAAWd,EAAQE,OAAOa,SAClEZ,EAAOH,EAAQG,KAAKS,KAAKC,MAAMD,KAAKE,SAAWd,EAAQG,KAAKY,SAE5DC,EADUhB,EAAQI,QAAQQ,KAAKC,MAAMD,KAAKE,SAAWd,EAAQI,QAAQW,SACpD,KAAOd,EAAO,KAAOC,EAAS,IAAMC,EAAO,KAPhC,EAQEI,mBAASD,EAAMW,WARjB,mBAQzBA,EARyB,UAahC,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KAEI,kBAAC,IAAD,CACIC,QAAS,kBAAMP,GAA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","file":"static/js/main.581cf313.chunk.js","sourcesContent":["export const Excuses = {\n    fail: [\n        \"Самолет, в котором я летел, приземлился на запаснике в Новгороде\",\n        \"Я ехал в поезде, и кто-то сорвал стопкран, я резко упал и ударился головой, сейчас в больнице\",\n        \"Я поймал попутку, её остановила ГИБДД, и нашли крупную партию наркотиков. Сейчас я под следствием\",\n        \"Я вышел из дома, а дверь захлопнулась, я попытался залезть через балкон, но упал. Сейчас я в травмпункте, иду на поправку\",\n        \"Я шел по парку, и на меня напал бомж, он украл у меня кошелек и ключи от дома. Хорошо, хоть что не изнасиловал\",\n        \"У меня развалилась кровать во время сна, я повредил позвоночник. Сейчас иду на поправку\",\n        \"Я потерял паспорт\",\n        \"Я на похоронах был, последний дедушка умер\",\n        \"У меня рак нашли, я по больницам ездил\",\n        \"У меня рак печени, к сожалению, серьезно, я сейчас химиотерапию прохожу\",\n        \"Я потерял всё, что было в портмоне\",\n        \"Меня избили цыгане\",\n        \"Я просто в глуши был\",\n        \"Я просто был не в городе\",\n        \"Меня отправили по делам\",\n        \"Твой банк отклонил перевод\",\n        \"Мой счет заблокировали\",\n        \"Я потерял ноутбук\",\n        \"У меня сломался компьютер\",\n        \"Меня машина сбила\",\n        \"Я немного не успеваю\",\n        \"Я сейчас работаю по фрилансу\",\n        \"Скоро стартап окупится\",\n        \"Бабушка скоро пенсию получит\",\n        \"Деньги вернул твой банк, пишет отказ, проверь номер карты\",\n        \"Платеж на обработке\",\n        \"Платеж отклонен, буду ругаться с банком\",\n        \"Меня в армию забрали\",\n        \"У меня кошка рожала\",\n        \"У меня дочь родила\",\n        \"У меня молоко убежало\",\n        \"У меня квартира сгорела\",\n        \"Я недооценил задачу\",\n        \"Я недооценил масштаб задачи\",\n        \"Я столкнулся с непредвиденными сложностями\"\n    ],\n    action: [\n        \"Я сделаю всё\",\n        \"Вышлю часть\",\n        \"Постараюсь\",\n        \"Доберусь и всё сделаю\",\n        \"Смогу сделать всё\",\n        \"Я закончу\",\n        \"Я доделаю\",\n        \"Я исправлю\",\n        \"Согласую всё\",\n        \"Объясню всё подробнее\",\n        \"Смогу отослать\",\n        \"Смогу решить этот вопрос\",\n        \"Смогу доделать\",\n        \"Смогу закончить\",\n        \"Сделаю перевод\",\n        \"Переведу\",\n        \"Приеду\",\n        \"Я лично встречусь с тобой\",\n        \"Я разберусь с этим\",\n        \"Я разгребу это\",\n        \"Решу всё\",\n        \"Отправлю\",\n        \"Скину\",\n        \"Доеду до дома\",\n        \"Приеду домой\",\n        \"Закрою этот вопрос\",\n        \"Попробую\",\n        \"Давай встретимся\",\n        \"Давай наличкой отдам\"\n    ],\n    date: [\n        \"сейчас\",\n        \"завтра\",\n        \"завтра вечером\",\n        \"завтра днем\",\n        \"завтра утром\",\n        \"как можно быстрее\",\n        \"как можно скорее\",\n        \"наконец-то\",\n        \"чуть позже\",\n        \"позже\",\n        \"около 2 суток\",\n        \"в конце недели\",\n        \"в конце месяца\",\n        \"в конце дня\",\n        \"до конца следующей недели\",\n        \"до завтра\",\n        \"послезавтра\",\n        \"ближе к вечеру\",\n        \"ближе к утру\",\n        \"с утра\",\n        \"завтра крайний срок\",\n        \"на неделе\",\n        \"через пару дней\",\n        \"скоро\",\n        \"сразу\",\n        \"сейчас, в течение 3-4 дней\"\n    ],\n    general: [\n        \"Хочу закрыть вопрос поскорее\",\n        \"Сам уже устал ждать\",\n        \"Я бы с радостью уже все сделал\",\n        \"Сам в шоке, что так всё получилось\",\n        \"Сам в шоке, что так всё затягивается\",\n        \"Сам не ожидал таких событий\",\n        \"Надо поскорее решить этот вопрос\",\n        \"Надо уже закрыть этот вопрос\",\n        \"Надо уже решить эту проблему\",\n        \"Я, конечно, очень извиняюсь, что так вышло\"\n    ]\n};","import React, { useState, useEffect } from 'react';\nimport { Panel, View, PanelHeader, Button, Div, Group, Headline, Title, Card, CardGrid, Avatar, PanelHeaderContent, Cell, List, PanelHeaderContext, Banner } from '@vkontakte/vkui';\nimport { Excuses } from './../Data'\nimport './Home.sass'\n\nexport default function Home(props) {\n    const [phrase, setPhrase] = useState('Корм кончился. У меня всего лишь лапки, сделаю завтра')\n    const [contextOpened, setContextOpened] = useState(false)\n    let fail = Excuses.fail[Math.floor(Math.random() * Excuses.fail.length)];\n    let action = Excuses.action[Math.floor(Math.random() * Excuses.action.length)];\n    let date = Excuses.date[Math.floor(Math.random() * Excuses.date.length)];\n    let general = Excuses.general[Math.floor(Math.random() * Excuses.general.length)];\n    var item = general + '. ' + fail + '. ' + action + ' ' + date + '. ';\n    const [modalOpen, setModalOpen] = useState(props.modalOpen)\n    const seenButton = () => {\n        props.closeModal(false)\n        props.changeScreen(\"library\")\n    }\n    return (\n        <View>\n            <Panel>\n                <PanelHeader\n                >\n                    <PanelHeaderContent\n                        onClick={() => setContextOpened(!contextOpened)}\n                    >\n                        Главная\n                        <img src={require('./../img/multimedia-option.svg')} alt=\"\" className=\"home__arrow-down\" onClick={() => setContextOpened(!contextOpened)} />\n                    </PanelHeaderContent>\n                </PanelHeader>\n                <PanelHeaderContext opened={contextOpened} onClose={() => setContextOpened(!contextOpened)}>\n                    <List>\n                        <Cell\n                            data-mode=\"all\"\n                            onClick={() => setContextOpened(!contextOpened)}\n                        >\n                            Главная\n                        </Cell>\n                        <Cell\n                            data-mode=\"managed\"\n                            onClick={() => props.changeScreen(\"phrases\")}\n                        >\n                            Цитаты\n                        </Cell>\n                        <Cell\n                            data-mode=\"managed\"\n                            onClick={() => props.changeScreen(\"library\")}\n                        >\n                            Библиотека\n                        </Cell>\n                        <Cell\n                            data-mode=\"managed\"\n                            onClick={() => props.changeScreen(\"about\")}\n                        >\n                            О приложении\n                        </Cell>\n\n                    </List>\n                </PanelHeaderContext>\n                <Group separator=\"hide\">\n\n                    {\n                        modalOpen ?\n                            <Banner\n                                mode=\"image\"\n                                header=\"Новая версия приложения!\"\n                                subheader=\"Добавлена страница 'Библиотека'\"\n                                background={\n                                    <div\n                                        style={{\n                                            backgroundColor: '#FF8E22',\n                                            backgroundImage: 'url(https://image.flaticon.com/icons/svg/1454/1454500.svg)',\n                                            backgroundPosition: 'right bottom',\n                                            backgroundSize: 70,\n                                            backgroundRepeat: 'no-repeat',\n                                        }}\n                                    />\n                                }\n                                actions={<Button mode=\"overlay\" style={{color: 'white', background: '#FFC15B'}} onClick={() => seenButton()}>Подробнее</Button>}\n                            /> : \"\"\n                    }\n                </Group>\n                <Group separator=\"hide\">\n                    <CardGrid>\n                        <Card size=\"l\" mode=\"shadow\" style={{ marginTop: 10 }}>\n                            <Div>\n                                <Title level=\"2\" style={{ marginBottom: 10 }}>Зачем тебе это?</Title>\n                                <Headline weight=\"regular\" style={{ marginBottom: 0 }}>У каждого бывало, что нужно придумать правдоподобную отмазку для заказчика/директора/тимлида, не так ли? Так вот, данное приложение поможет вам с этим!</Headline>\n                            </Div>\n                        </Card>\n                    </CardGrid>\n                </Group>\n                <Group separator=\"hide\">\n                    <CardGrid>\n                        <Card size=\"l\" mode=\"shadow\">\n                            <Div>\n                                <Title level=\"2\" style={{ marginBottom: 10 }}>Твоя отмазка:</Title>\n                                <Headline weight=\"regular\" style={{ marginBottom: 0 }}>{phrase}</Headline>\n                            </Div>\n                        </Card>\n                    </CardGrid>\n                </Group>\n                <Group>\n                    <Div className=\"home__button\">\n                        <Button stretched mode=\"primary\" size=\"l\" onClick={() => setPhrase(item)}>\n                            Придумать отмазку\n                        </Button>\n                    </Div>\n                </Group>\n\n            </Panel>\n        </View>\n    )\n}","import React, { useState } from 'react';\nimport { Panel, View, PanelHeader, Button, Div, Group, Headline, Title, PanelHeaderClose, CardGrid, Card, Header, PanelHeaderContent, Cell, List, PanelHeaderContext } from '@vkontakte/vkui';\nimport bridge from '@vkontakte/vk-bridge'\n\nexport default function About(props) {\n    const [contextOpened, setContextOpened] = useState(false)\n    return (\n        <View>\n            <Panel>\n                <PanelHeader\n                >\n                    <PanelHeaderContent\n                        onClick={() => setContextOpened(!contextOpened)}\n                    >\n                        О приложении\n                        <img src={require('./../img/multimedia-option.svg')} alt=\"\" className=\"home__arrow-down\" onClick={() => setContextOpened(!contextOpened)} />\n\n                    </PanelHeaderContent>\n                </PanelHeader>\n                <PanelHeaderContext opened={contextOpened} onClose={() => setContextOpened(!contextOpened)}>\n                    <List>\n                        <Cell\n                            data-mode=\"all\"\n                            onClick={() => props.changeScreen(\"main\")}\n                        >\n                            Главная\n                        </Cell>\n                        <Cell\n                            data-mode=\"managed\"\n                            onClick={() => props.changeScreen(\"phrases\")}\n                        >\n                            Цитаты\n                        </Cell>\n                        <Cell\n                            data-mode=\"managed\"\n                            onClick={() => props.changeScreen(\"library\")}\n                        >\n                            Библиотека \n                        </Cell>\n                        <Cell\n                            data-mode=\"managed\"\n                            onClick={() => setContextOpened(!contextOpened)}\n                        >\n                            О приложении\n                        </Cell>\n                    </List>\n                </PanelHeaderContext>\n                <Group separator=\"hide\">\n                    <CardGrid>\n                        <Card size=\"l\" mode=\"shadow\">\n                            <Div>\n                                <Title level=\"2\" style={{ marginBottom: 10 }}>Зачем тебе это?</Title>\n                                <Headline weight=\"regular\" style={{ marginBottom: 0 }}>Данное приложениие уже прошло стадию MVP и в данный момент является инструментом, который может быть полезен для всех!</Headline>\n                            </Div>\n                        </Card>\n                    </CardGrid>\n                </Group>\n                <Group separator=\"hide\">\n                    <CardGrid>\n                        <Card size=\"l\" mode=\"shadow\">\n                            <Div>\n                                <Title level=\"2\" style={{ marginBottom: 10 }}>Кем сделано?</Title>\n                                <Headline weight=\"regular\" style={{ marginBottom: 0 }}>Сделанно <a href=\"https://vk.com/s.sergeenkov\">Александром Сергеенковым</a></Headline>\n                            </Div>\n                        </Card>\n                    </CardGrid>\n                </Group>\n                <Group>\n                <Div className=\"home__button\" style={{bottom: 70}}>\n                        <Button stretched mode=\"primary\" size=\"l\" onClick={() => bridge.send(\"VKWebAppJoinGroup\", {\"group_id\": 195028399})}>\n                            Сообщество с приложениями\n                        </Button>\n                    </Div>\n                    <Div className=\"home__button\">\n                        <Button stretched mode=\"secondary\" size=\"l\" onClick={() => bridge.send(\"VKWebAppAllowNotifications\", {})}>\n                            Узнавать о приложениях\n                        </Button>\n                    </Div>\n                </Group>\n            </Panel>\n        </View>\n    )\n}","export const PHRASES = {\n    love: [\n        \"Если человек умер, его нельзя перестать любить, черт возьми. Особенно если он был лучше всех живых, понимаешь?\",\n        \"Если бы я знал, когда видел тебя в последний раз, что это последний раз, я бы постарался запомнить твое лицо, твою походку, все, связанное с тобой. И, если бы я знал, когда в последний раз тебя целовал, что это — последний раз, я бы никогда не остановился.\",\n        \"Такой вот парадокс: мы совершаем подвиги для тех, кому до нас нет никакого дела, а любят нас те, кому мы нужны и без всяких подвигов...\",\n        \"Кому-то не хватает одной женщины, и он переключается на пятую, десятую. А другому не хватает жизни, чтобы любить одну-единственную.\",\n        \"У самого злого человека расцветает лицо, когда ему говорят, что его любят. Стало быть, в этом счастье...\",\n        \"Когда всё заканчивается, боль расставания пропорциональна красоте пережитой любви. Выдержать эту боль трудно, потому что человека сразу же начинают мучить воспоминания.\",\n        \"В идеальных отношениях чистая любовь и грязный секс дополняют, а не исключают друг друга.\",\n        \"Влюбиться можно в красоту, но полюбить – лишь только душу!\",\n        \"– Вы красивые, но пустые, – продолжал Маленький принц. – Ради вас не захочется умереть. Конечно, случайный прохожий, поглядев на мою розу, скажет, что она точно такая же, как вы. Но мне она одна дороже всех вас. Ведь это её, а не вас я поливал каждый день. Её, а не вас накрывал стеклянным колпаком. Её загораживал ширмой, оберегая от ветра. Для неё убивал гусениц, только двух или трех оставил, чтобы вывелись бабочки. Я слушал, как она жаловалась и как хвастала, я прислушивался к ней, даже когда она умолкала. Она – моя.\",\n        \"Умереть за любовь не сложно. Сложно найти любовь, за которую стоит умереть.\",\n        \"Нет ничего хуже, чем любить кого-то, кто никогда не перестанет тебя разочаровывать.\"\n    ],\n    life: [\n        \"Жизнь – нелегкое занятие, а труднее всего первые сто лет\",\n        \"Жизнь – это больница, где каждый пациент мечтает перебраться на другую кровать\",\n        \"Самые лучшие в мире вещи невозможно увидеть или потрогать руками. Их можно только почувствовать\",\n        \"Жизнь – это череда маленьких шагов\",\n        \"Научись любить себя и все остальное станет на свои места\",\n        \"Не стоит тратить на это даже пяти минут, если ты не готов потратить на это 5 лет\",\n        \"Что дается легко не будет длиться долго. А то, что длиться долго не дается легко\",\n        \"Тот, кто не верит в чудеса, никогда его и не получит\",\n        \"Жизнь – это путешествие, а не дом\",\n        \"Жизнь слишком коротка, чтобы делать то, что не нравится\"\n    ],\n    friendship: [\n        \"Обязательно дружите с теми, кто лучше вас. Будете мучиться, но расти.\",\n        \"Важен тот человек, который приходит на помощь тогда, когда его даже не просят.\",\n        \"Они улыбаются, когда ты звонишь им, но у них нет времени позвонить тебе.\",\n        \"Хорошие друзья, хорошие книги и спящая совесть – вот идеальная жизнь.\",\n        \"Трусливый друг страшнее врага, ибо врага опасаешься, а на друга надеешься.\",\n        \"Все сочувствуют несчастьям своих друзей, и лишь немногие — радуются их успехам.\",\n        \"Необходима большая смелость, чтобы противостоять врагам, но гораздо большая, чтобы пойти наперекор друзьям.\",\n        \"... какая-то часть тебя уходит с тем, кого ты потерял, ведь дружба — это как любовь. Лучше ни к кому не привязываться, слишком это рискованно.\",\n        \"Настоящий друг с тобой, когда ты не прав. Когда ты прав, всякий будет с тобой.\",\n        \"Ох, уж эти подростки! Думают, что главное — иметь побольше друзей. Достаточно и одного. Одного единственного, но своего.\"\n    ],\n}","import React, { useState } from 'react'\nimport { View, Panel, Cell, PanelHeader, Group, CardGrid, Card, Button, Div, Title, Headline, PanelHeaderContext, PanelHeaderContent, List } from '@vkontakte/vkui'\nimport { PHRASES } from './../PHRASES'\n\nexport default function Phrases(props) {\n    const [phrase, setPhrase] = useState('Цитата - всего лишь слова, а не приказ к действию.')\n    const [contextOpened, setContextOpened] = useState(false)\n    let love = PHRASES.love[Math.floor(Math.random() * PHRASES.love.length)];\n    let life = PHRASES.life[Math.floor(Math.random() * PHRASES.life.length)];\n    let friendship = PHRASES.friendship[Math.floor(Math.random() * PHRASES.friendship.length)];\n    return (\n        <View>\n            <Panel>\n                <PanelHeader\n                >\n                    <PanelHeaderContent\n                        onClick={() => setContextOpened(!contextOpened)}\n                    >\n                        Цитаты\n                        <img src={require('./../img/multimedia-option.svg')} alt=\"\" className=\"home__arrow-down\" onClick={() => setContextOpened(!contextOpened)} />\n                    </PanelHeaderContent>\n                </PanelHeader>\n                <PanelHeaderContext opened={contextOpened} onClose={() => setContextOpened(!contextOpened)}>\n                    <List>\n                        <Cell\n                            data-mode=\"all\"\n                            onClick={() => props.changeScreen(\"main\")}\n                        >\n                            Главная\n                        </Cell>\n                        <Cell\n                            data-mode=\"managed\"\n                            onClick={() => setContextOpened(!contextOpened)}\n                        >\n                            Цитаты\n                        </Cell>\n                        <Cell\n                            data-mode=\"managed\"\n                            onClick={() => props.changeScreen(\"library\")}\n                        >\n                            Библиотека \n                        </Cell>\n                        <Cell\n                            data-mode=\"managed\"\n                            onClick={() => props.changeScreen(\"about\")}\n                        >\n                            О приложении\n                        </Cell>\n                    </List>\n                </PanelHeaderContext>\n                <Group separator=\"hide\">\n                    <CardGrid>\n                        <Card size=\"l\" mode=\"shadow\">\n                            <Div>\n                                <Title level=\"2\" style={{ marginBottom: 10 }}>Твоя цитата:</Title>\n                                <Headline weight=\"regular\" style={{ marginBottom: 0 }}>{phrase}</Headline>\n                            </Div>\n                        </Card>\n                    </CardGrid>\n                </Group>\n                <Group>\n                    <Div className=\"home__button\" style={{ bottom: 120 }}>\n                        <Button stretched mode=\"primary\" size=\"l\" onClick={() => setPhrase(love)}>\n                            Цитата о любви\n                        </Button>\n                    </Div>\n                    <Div className=\"home__button\" style={{ bottom: 70 }}>\n                        <Button stretched mode=\"primary\" size=\"l\" onClick={() => setPhrase(life)}>\n                            Цитата о жизни\n                        </Button>\n                    </Div>\n                    <Div className=\"home__button\">\n                        <Button stretched mode=\"primary\" size=\"l\" onClick={() => setPhrase(friendship)}>\n                            Цитата о дружбе\n                        </Button>\n                    </Div>\n                </Group>\n            </Panel>\n        </View>\n    )\n}\n","import React from 'react'\n\nconst LibraryContext = React.createContext({\n    books: [\n        {\n            id: 0,\n            name: 'Harry Potter and methods of rationality',\n            author: 'Elieser Yudkovski',\n        },\n        {\n            id: 1,\n            name: 'Harry Potter and the philosopher stone',\n            author: 'Joan Roaling'\n        }\n    ],\n    addBook: ({name, author}) => {},\n    deleteBook: (bookId) => {},\n})\n\nexport default LibraryContext","import React, { useContext } from 'react'\nimport LibraryContext from './../context/LibraryContext';\nimport { Group, Card, CardGrid, Header, Div, Title, Button } from '@vkontakte/vkui';\nimport Icon24Cancel from '@vkontakte/icons/dist/24/cancel';\n\nexport default function BooksList() {\n    return (\n        <LibraryContext.Consumer>\n            {(context) => (\n                <Div>\n                    {\n                        context.books.map(book => (\n                            <Group separator=\"hide\" key={book.id} header={<Header mode=\"secondary\">{book.today}</Header>}>\n                                <CardGrid>\n                                    <Card size=\"l\">\n                                        <div>\n                                            <Icon24Cancel  style={{position: 'absolute', right: 10, top: -5}} onClick={() => context.deleteBook(book.id)}/>\n                                            <Title style={{ marginTop: 15, marginLeft: 15, marginRight: 15 }}><b>Навазние книги:</b> {book.name}</Title>\n                                            <Title style={{ marginTop: 10, marginLeft: 15, marginRight: 15 }}><b>Автор книги: </b>{book.author}</Title>\n                                            <Div>\n                                                <Button stretched mode=\"secondary\" size=\"l\" onClick={() => context.deleteBook(book.id)}>\n                                                    Прочитал книгу\n                                                </Button>\n                                            </Div>\n                                        </div>\n                                    </Card>\n                                </CardGrid>\n                            </Group>\n                        ))\n                    }\n                </Div>\n            )}\n        </LibraryContext.Consumer>\n\n    )\n}","import React, { useState, useContext } from 'react'\nimport { View, Panel, FormLayout, FormLayoutGroup, Card, CardGrid, Input, List, Div, Button, Cell, PanelHeader, PanelHeaderContent, PanelHeaderContext, Group } from '@vkontakte/vkui'\nimport LibraryContext from '../context/LibraryContext'\nimport BooksList from '../components/BookList'\n\nexport default function Urban(props) {\n    const [contextOpened, setContextOpened] = useState(false)\n    const [name, setName] = useState('')\n    const [author, setAuthor] = useState('')\n    const context = useContext(LibraryContext)\n    const onSubmit = () => {\n        if (name && author) {\n            context.addBook({ name, author })\n        } else {\n            return null\n        }\n        setName('')\n        setAuthor('')\n    }\n    return (\n        <LibraryContext.Consumer>\n            {(context) => (\n                <View>\n                    <Panel>\n                        <PanelHeader\n                        >\n                            <PanelHeaderContent\n                                onClick={() => setContextOpened(!contextOpened)}\n                            >\n                                Библиотека\n                        <img src={require('./../img/multimedia-option.svg')} alt=\"\" className=\"home__arrow-down\" onClick={() => setContextOpened(!contextOpened)} />\n                            </PanelHeaderContent>\n                        </PanelHeader>\n                        <PanelHeaderContext opened={contextOpened} onClose={() => setContextOpened(!contextOpened)}>\n                            <List>\n                                <Cell\n                                    data-mode=\"all\"\n                                    onClick={() => props.changeScreen(\"main\")}\n                                >\n                                    Главная\n                        </Cell>\n                                <Cell\n                                    data-mode=\"managed\"\n                                    onClick={() => props.changeScreen(\"phrases\")}\n                                >\n                                    Цитаты\n                        </Cell>\n                                <Cell\n                                    data-mode=\"managed\"\n                                    onClick={() => setContextOpened(!contextOpened)}\n                                >\n                                    Библиотека\n                        </Cell>\n                                <Cell\n                                    data-mode=\"managed\"\n                                    onClick={() => props.changeScreen(\"about\")}\n                                >\n                                    О приложении\n                        </Cell>\n\n                            </List>\n                        </PanelHeaderContext>\n                        <FormLayout>\n                            <FormLayoutGroup top=\"Введите название книги\">\n                                <Input type=\"text\" placeholder=\"Введите название\" value={name} onChange={(e) => setName(e.target.value)} />\n                            </FormLayoutGroup>\n                        </FormLayout>\n                        <FormLayout style={{marginTop: -10}}>\n                            <FormLayoutGroup top=\"Введите автора книги\">\n                                <Input type=\"text\" placeholder=\"Введите автора\" value={author} onChange={(e) => setAuthor(e.target.value)} />\n                            </FormLayoutGroup>\n                        </FormLayout>\n                        <Div>\n                            <Button stretched mode=\"primary\" size=\"l\" onClick={() => onSubmit()}>\n                                Добавить книгу\n                        </Button>\n                        </Div>\n                        <BooksList />\n\n                    </Panel>\n                </View>\n            )}\n\n        </LibraryContext.Consumer>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { View, Panel, PanelHeader, Header, Tabbar, Epic, TabbarItem, Root } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Home from './screens/Home'\nimport About from './screens/About';\nimport Phrases from './screens/Phrases';\nimport Urban from './screens/Urban';\nimport LibraryContext from './context/LibraryContext';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Icon28NewsfeedOutline } from '@vkontakte/icons/dist/28/newsfeed_outline'\nimport { Icon28SearchOutline } from '@vkontakte/icons/dist/28/search_outline'\nimport { Icon28MessageOutline } from '@vkontakte/icons/dist/28/message_outline'\nimport { Icon28Notifications } from '@vkontakte/icons/dist/28/notifications'\nimport { Icon28More } from '@vkontakte/icons/dist/28/more'\n\nfunction App() {\n\tconst [modalOpen, setModalOpen] = useState(true)\n\tconst [activeView, setActiveView] = useState(\"main\")\n\tconst [books, setBooks] = useState(\n\t\t() => {\n\t\t\tconst localData = localStorage.getItem('books')\n\t\t\treturn localData ? JSON.parse(localData) : []\n\t\t}\n\t)\n\tconst addBook = ({ name, author }) => {\n\t\tconst id = uuidv4();\n\t\tlet today = new Date();\n\t\tlet dd = String(today.getDate()).padStart(2, '0');\n\t\tlet mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n\t\tlet yyyy = today.getFullYear();\n\t\ttoday = mm + '/' + dd + '/' + yyyy;\n\t\tconst book = { id, name, author, today }\n\t\tsetBooks(old => [book, ...old])\n\t}\n\tconst deleteBook = (bookId) => {\n\t\tsetBooks(books.filter(book => book.id !== bookId))\n\t}\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem('books', JSON.stringify(books))\n\t}, [books])\n\n\n\treturn (\n\t\t<LibraryContext.Provider value={{\n\t\t\tbooks: books,\n\t\t\taddBook: addBook,\n\t\t\tdeleteBook: deleteBook\n\t\t}}>\n\t\t\t<Root activeView={activeView}>\n\t\t\t\t<View id=\"main\">\n\t\t\t\t\t<Home changeScreen={setActiveView} closeModal={setModalOpen} modalOpen={modalOpen} />\n\t\t\t\t</View>\n\t\t\t\t<View id=\"phrases\">\n\t\t\t\t\t<Phrases changeScreen={setActiveView} />\n\t\t\t\t</View>\n\t\t\t\t<View id=\"about\">\n\t\t\t\t\t<About changeScreen={setActiveView} />\n\t\t\t\t</View>\n\t\t\t\t<View id=\"library\">\n\t\t\t\t\t<Urban changeScreen={setActiveView} />\n\t\t\t\t</View>\n\t\t\t</Root>\n\t\t</LibraryContext.Provider>\n\t)\n}\n\nexport default App;","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n","module.exports = __webpack_public_path__ + \"static/media/multimedia-option.8166cd6c.svg\";"],"sourceRoot":""}